plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id "org.jlleitschuh.gradle.ktlint" version "11.4.0"
}

apply plugin: "org.jlleitschuh.gradle.ktlint"

android {
    compileSdk 33

    defaultConfig {
        applicationId "com.developersbreach.hangman"
        minSdk 24
        targetSdk 33
        versionCode 1
        versionName "0.1.0"

        vectorDrawables {
            useSupportLibrary true
        }

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunnerArguments clearPackageData: 'true'
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
        debug {
            minifyEnabled false
            shrinkResources false
            proguardFiles(getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro")
            signingConfig signingConfigs.debug
        }
    }

    signingConfigs {
        release {
            keyAlias "keyAlias"
            keyPassword "keyPassword"
            storeFile file("keys/hangman/hangman-game-release-key")
            storePassword "storePassword"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
        // To mark experimental features api
        freeCompilerArgs += "-Xopt-in=kotlin.RequiresOptIn"
    }

    buildFeatures {
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion compose_version
    }

    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }

    testOptions {
        unitTests.includeAndroidResources = true
    }

    ktlint {
        verbose = true
        debug = false
        android = true
        ignoreFailures = false
        outputToConsole = true
        reporters {
            reporter "json"
        }
    }
}

tasks.named("check") {
    dependsOn("ktlintCheck")
}

gradle.projectsEvaluated {
    assemble.dependsOn ktlintCheck
}

dependencies {

    implementation 'androidx.core:core-ktx:1.10.1'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.9.0'
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation "androidx.compose.ui:ui-tooling:$compose_version"
    implementation 'androidx.activity:activity-compose:1.7.2'

    // Observe state and livedata
    implementation "androidx.compose.runtime:runtime-livedata:$compose_version"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.1'

    // Constraint Layout
    implementation "androidx.constraintlayout:constraintlayout-compose:1.0.1"

    // Navigation
    implementation "androidx.navigation:navigation-compose:2.6.0"

    // For persisting game difficulty, high score values.
    implementation 'androidx.preference:preference-ktx:1.2.0'

    // Room
    implementation "androidx.room:room-runtime:2.5.1"
    implementation "androidx.room:room-ktx:2.5.1"
    kapt "androidx.room:room-compiler:2.5.1"

    // Koin - Jetpack Compose
    implementation "io.insert-koin:koin-androidx-compose:3.2.0-beta-1"

    testImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    testImplementation "io.mockk:mockk:1.13.5"

    androidTestImplementation 'androidx.test.ext:junit-ktx:1.1.5'
    androidTestImplementation("androidx.compose.ui:ui-test-junit4:$compose_version")

    debugImplementation("androidx.compose.ui:ui-test-manifest:$compose_version")
}